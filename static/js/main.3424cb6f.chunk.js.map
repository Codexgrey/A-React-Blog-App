{"version":3,"sources":["Navbar.js","Bloglist.js","useFetch.js","Home.js","Create.js","BlogDetails.js","PageNotFound.js","App.js","index.js"],"names":["Navbar","className","to","Bloglist","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","loading","setLoading","error","setError","useEffect","abortCtrl","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","navigate","useNavigate","onSubmit","e","preventDefault","method","JSON","stringify","headers","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","element","PageNotFound","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3424cb6f.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h1>Code X Grey Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New Blog</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst Bloglist = ({ blogs, title }) => {\r\n    // const blogs = props.blogs;\r\n    // const title = props.title;\r\n\r\n    return (\r\n        <div className=\"blog-list\">\r\n            <h2>{ title }</h2>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                        <h2>{ blog.title }</h2>\r\n                        <p>Written by { blog.author }</p>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div> \r\n    );\r\n}\r\n \r\nexport default Bloglist;","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null); \r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCtrl = new AbortController();\r\n\r\n      setTimeout(() => {\r\n        //simulating the normal lag in fetching data from server-side     \r\n        fetch(url, { signal: abortCtrl.signal })\r\n          .then(res => {\r\n            //checking response object's \"Ok\" method to see if we got a response back from the database\r\n            if (!res.ok) {   \r\n              throw Error(`Couldn't fetch resource data`);\r\n            }\r\n            return res.json();\r\n          })\r\n          .then(data => {\r\n            setData(data);\r\n            setLoading(false);\r\n            setError(null);\r\n          })\r\n          .catch(err => {\r\n            if (err.name === 'AbortError') {\r\n              console.log('fetch aborted');\r\n            }else {\r\n              setLoading(false);\r\n              setError(err.message);\r\n            }\r\n          });\r\n      }, 1000);\r\n\r\n      return () => abortCtrl.abort(); //using the abort method on our controller\r\n  }, [url]);\r\n\r\n    return { data, loading, error };\r\n}\r\n\r\nexport default useFetch;\r\n\r\n","import Bloglist from \"./Bloglist\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {  \r\n    const { data: blogs, loading, error } = useFetch('http://localhost:8000/blogs'); //grab data but call it blogs here\r\n \r\n    return ( \r\n        <div className=\"home\">\r\n          { error &&  <div>{ error }</div> }\r\n          { loading && <div>loading...</div> }\r\n          { blogs && <Bloglist blogs={blogs} title=\"All Blogs\"/> }\r\n        </div>\r\n     ); \r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Create = () => {\r\n  // setting up states to track changes to fields\r\n  const [title, setTitle] = useState('')\r\n  const [body, setBody] = useState('')  \r\n  const [author, setAuthor] = useState('Codexgrey') \r\n  const [loading, setLoading] = useState(false) \r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n    setLoading(true)\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(blog),\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n\r\n    }).then(() => {\r\n      console.log(\"New Blog Added\");\r\n      setLoading(false);\r\n      // history.go(-1); useHistory re-directing us to the home page \r\n      navigate(\"/\")  \r\n  \r\n    }) \r\n  } \r\n\r\n  return (  \r\n    <div className=\"create\">\r\n        <h2>Add a New Blog</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Blog title:</label>\r\n          {/* getting value & tracking title input value  */}\r\n          <input type=\"text\" required value= { title } onChange={(e) => setTitle(e.target.value)}/>\r\n\r\n          <label>Blog body:</label>\r\n          {/* getting value & tracking text value */}\r\n          <textarea required value={ body } onChange={(e) => setBody(e.target.value)}></textarea>\r\n\r\n          <label>Blog author:</label>\r\n          {/* getting value & tracking option value */}\r\n          <select value={ author } onChange={(e) => setAuthor(e.target.value)}> \r\n            <option value=\"Codexgrey\">Codexgrey</option>\r\n            <option value=\"mario\">Mario</option>\r\n            <option value=\"yoshi\">Yoshi</option>\r\n          </select>\r\n          { !loading && <button>Add Blog</button> }\r\n          { loading && <button disabled>Adding Blog...</button> }\r\n        </form>\r\n    </div>  \r\n  );\r\n}\r\n \r\nexport default Create;","import { useNavigate, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const { id } = useParams();\r\n    const { data: blog, error, loading } = useFetch('http://localhost:8000/blogs/' + id)\r\n    const navigate = useNavigate();\r\n\r\n    const handleClick = () => {\r\n        fetch('http://localhost:8000/blogs/' + blog.id, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            navigate(\"/\");\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            { loading && <div>loading...</div> }\r\n            { error && <div>{ error }</div>  }\r\n            { blog && (\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>Written by { blog.author }</p>\r\n                    <div>{ blog.body }</div>\r\n                    <button onClick={handleClick}>Delete</button>\r\n                </article>\r\n            ) }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h2>Oops!</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to=\"/\">Lets head back to the Homepage...</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Create from './Create';\r\nimport BlogDetails from './BlogDetails';\r\nimport PageNotFound from './PageNotFound';\r\n\r\nfunction App() {\r\n   return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar /> \r\n        <div className=\"content\">\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Home />} />\r\n            <Route exact path=\"/create\" element={<Create />} />\r\n            <Route exact path=\"/blogs/:id\" element={<BlogDetails />} />\r\n            <Route exact path=\"*\" element={<PageNotFound />} />\r\n            {/* old way  of using Route\r\n              <Route exact path=\"/\"> <Home /> </Route>\r\n              <Route path=\"/blogs/:id\"> <BlogDetails /> </Route>\r\n              <Route path=\"*\"> <PageNotFound /> </Route> \r\n            */}\r\n          </Routes>\r\n        </div>\r\n      </div>  \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// The Navbar Comp is nested inside the Router Comp & is always gonna show up in each page, as it isn't nested inside the Switch Comp as well\r\n// Thoroughly enjoyed building this study project.\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />                       {/** root component */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')  // rendering position\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}